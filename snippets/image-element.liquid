{% comment %}
  @param alt {String}
    The image alt text

  @param lazyload {Boolean}
    If true, lazyloads image. If not specified, defaults to true.

  @param progressive {Boolean}
    If true, image is progressive

  @param stretch_width {Boolean}
    If true, remove the max-width from the image tag

  @param additional_classes {String}
    Additional classes added to the image tag

  @param inline_style {String}
    CSS styles to apply to the image tag's style attribute

  @param back_to_basics {Boolean}
    If true, use standard image tag

  @param focal_point {String}
    The focal point set by the merchant for the image in the Shopify admin

  @param object_fit {Boolean}
    If true, resize the image to fit its container

  @param max_height {Number}
    The max height of the image
{% endcomment %}

{% liquid
  assign alt = alt | escape
  assign inline_style = inline_style | default: blank
  assign focal_point = focal_point | default: blank
  assign lazyload = lazyload

  if lazyload == nil
    assign lazyload = true
  endif
%}

{% if focal_point != blank %}
  {%- capture focal_point_style -%}
    object-fit:cover;object-position:{{ focal_point }};
  {%- endcapture -%}

  {% if inline_style != blank %}
    {% assign inline_style = inline_style | append: focal_point_style %}
  {% else %}
    {% assign inline_style = focal_point_style %}
  {% endif %}
{% endif %}

{% comment %}Check if image is progressive (does not support transparent pngs){% endcomment %}
{% if progressive %}
  {%- capture srcset -%}
    {{ image | img_url: '5000x', format: 'pjpg' }} 5000w,
    {{ image | img_url: '4500x', format: 'pjpg' }} 4500w,
    {{ image | img_url: '4000x', format: 'pjpg' }} 4000w,
    {{ image | img_url: '3500x', format: 'pjpg' }} 3500w,
    {{ image | img_url: '3000x', format: 'pjpg' }} 3000w,
    {{ image | img_url: '2500x', format: 'pjpg' }} 2500w,
    {{ image | img_url: '2000x', format: 'pjpg' }} 2000w,
    {{ image | img_url: '1800x', format: 'pjpg' }} 1800w,
    {{ image | img_url: '1600x', format: 'pjpg' }} 1600w,
    {{ image | img_url: '1400x', format: 'pjpg' }} 1400w,
    {{ image | img_url: '1200x', format: 'pjpg' }} 1200w,
    {{ image | img_url: '1000x', format: 'pjpg' }} 1000w,
    {{ image | img_url: '800x', format: 'pjpg' }} 800w,
    {{ image | img_url: '600x', format: 'pjpg' }} 600w,
    {{ image | img_url: '400x', format: 'pjpg' }} 400w,
    {{ image | img_url: '200x', format: 'pjpg' }} 200w
  {%- endcapture -%}
{% else %}
  {%- capture srcset -%}
    {{ image | img_url: '5000x' }} 5000w,
    {{ image | img_url: '4500x' }} 4500w,
    {{ image | img_url: '4000x' }} 4000w,
    {{ image | img_url: '3500x' }} 3500w,
    {{ image | img_url: '3000x' }} 3000w,
    {{ image | img_url: '2500x' }} 2500w,
    {{ image | img_url: '2000x' }} 2000w,
    {{ image | img_url: '1800x' }} 1800w,
    {{ image | img_url: '1600x' }} 1600w,
    {{ image | img_url: '1400x' }} 1400w,
    {{ image | img_url: '1200x' }} 1200w,
    {{ image | img_url: '1000x' }} 1000w,
    {{ image | img_url: '800x' }} 800w,
    {{ image | img_url: '600x' }} 600w,
    {{ image | img_url: '400x' }} 400w,
    {{ image | img_url: '200x' }} 200w
  {%- endcapture -%}
{% endif %}

{% comment %}Loading style{% endcomment %}
{% if settings.image_loading_style == 'blur-up' %}
  {% comment %}Low quality image loads first{% endcomment %}
  {% assign low_quality_image = image | img_url: '50x' %}
{% elsif settings.image_loading_style == 'color' %}
  {% comment %}Dominant image color loads first{% endcomment %}
  {% assign dominant_color_image = image | img_url: '1x' %}
  {% capture background_color %}
    background: url({{ dominant_color_image }});
  {% endcapture %}
{% endif %}

{% if object_fit == true %}
  {% capture crop_to_aspect_ratio %}
    max-height: {{ max_height }}px; width: calc({{ image.width }} /  {{ image.height }} * {{ max_height }}px);
  {% endcapture %}
{% endif %}

{% if back_to_basics %}
  <div
    class="image-element__wrap"
    style="{{ background_color }}{{ crop_to_aspect_ratio }};"
  >
    <img
      {% if additional_classes %}
        class="{{ additional_classes }}"
      {% endif %}
      src="{{ image | img_url: '2000x' }}"
      alt="{{ alt }}"
      style="{{ inline_style }}"
    >
  </div>
{% else %}
  <div
    class="image-element__wrap"
    style="
      {{ background_color }}
      {{ crop_to_aspect_ratio }}
      {% unless stretch_width == true or object_fit %}
        max-width: {{ image.width }}px;
      {% endunless %}
    "
  >
    {%- if image == nil or lazyload -%}
      <img
        class="
          lazyload
          transition--{{ settings.image_loading_style }}
          {{ additional_classes }}
        "
        alt="{{ alt }}"
        {% if low_quality_image %}
          src="{{ low_quality_image }}"
        {% endif %}
        data-src="{{ image | img_url: '1600x' }}"
        data-sizes="auto"
        data-aspectratio="{{ image.width }}/{{ image.height }}"
        data-srcset="{{ srcset }}"
        style="{{ inline_style }}"
        width="{{ image.width }}"
        height="{{ image.height }}"
        srcset="data:image/svg+xml;utf8,<svg%20xmlns='http://www.w3.org/2000/svg'%20width='{{ image.width }}'%20height='{{ image.height }}'></svg>"
      >
    {%- else -%}
      {{
        image
        | image_url: width: 1600
        | image_tag:
          loading: 'eager',
          class: additional_classes,
          alt: alt,
          style: inline_style,
          width: image.width,
          height: image.height,
          srcset: srcset
      }}
    {%- endif -%}
  </div>
{% endif %}

{% comment %}Fallback for no javascript{% endcomment %}
<noscript>
  <img
    class="
      noscript
      {{ additional_classes }}
    "
    src="{{ image | img_url: '2000x' }}"
    alt="{{ alt | escape }}"
    style="{{ inline_style }}"
  >
</noscript>
